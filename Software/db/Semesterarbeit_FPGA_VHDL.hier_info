|Semesterarbeit_FPGA_VHDL
g_clk => pll:MyComponent_2.inclk0
g_clk => reset_LED~reg0.CLK
g_clk => index_3_LED~reg0.CLK
g_clk => index_2_LED~reg0.CLK
g_clk => index_1_LED~reg0.CLK
g_clk => index[0].CLK
g_clk => index[1].CLK
g_clk => index_0_LED~reg0.CLK
g_clk => accept_confirm.CLK
g_clk => accept.CLK
g_clk => counter_hr_1[0].CLK
g_clk => counter_hr_1[1].CLK
g_clk => hr_1_ena.CLK
g_clk => counter_hr_0[0].CLK
g_clk => counter_hr_0[1].CLK
g_clk => counter_hr_0[2].CLK
g_clk => counter_hr_0[3].CLK
g_clk => hr_0_ena.CLK
g_clk => counter_min_1[0].CLK
g_clk => counter_min_1[1].CLK
g_clk => counter_min_1[2].CLK
g_clk => min_1_ena.CLK
g_clk => counter_min_0[0].CLK
g_clk => counter_min_0[1].CLK
g_clk => counter_min_0[2].CLK
g_clk => counter_min_0[3].CLK
g_clk => min_0_ena.CLK
g_clk => counter_sec_1[0].CLK
g_clk => counter_sec_1[1].CLK
g_clk => counter_sec_1[2].CLK
g_clk => sec_1_ena.CLK
g_clk => counter_sec_0[0].CLK
g_clk => counter_sec_0[1].CLK
g_clk => counter_sec_0[2].CLK
g_clk => counter_sec_0[3].CLK
g_clk => sec_0_ena.CLK
g_clk => blink.CLK
g_clk => clock_divider[0].CLK
g_clk => clock_divider[1].CLK
g_clk => clock_divider[2].CLK
g_clk => clock_divider[3].CLK
g_clk => clock_divider[4].CLK
g_clk => clock_divider[5].CLK
g_clk => clock_divider[6].CLK
g_clk => clock_divider[7].CLK
g_clk => clock_divider[8].CLK
g_clk => clock_divider[9].CLK
g_clk => clock_divider[10].CLK
g_clk => clock_divider[11].CLK
g_clk => clock_divider[12].CLK
g_clk => clock_divider[13].CLK
g_clk => clock_divider[14].CLK
g_clk => clock_divider[15].CLK
g_clk => clock_divider[16].CLK
g_clk => clock_divider[17].CLK
g_clk => clock_divider[18].CLK
g_clk => clock_divider[19].CLK
g_clk => clock_divider[20].CLK
g_clk => clock_divider[21].CLK
g_clk => clock_divider[22].CLK
g_clk => clock_divider[23].CLK
g_clk => clock_divider[24].CLK
g_clk => clock_divider[25].CLK
g_clk => evening_ena.CLK
g_clk => set_LED~reg0.CLK
g_clk => show_LED~reg0.CLK
g_clk => sec_0_LED~reg0.CLK
g_clk => dec_point~reg0.CLK
g_clk => state~1.DATAIN
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => clock_divider.OUTPUTSELECT
reset => sec_0_ena.OUTPUTSELECT
reset => sec_1_ena.OUTPUTSELECT
reset => min_0_ena.OUTPUTSELECT
reset => min_1_ena.OUTPUTSELECT
reset => hr_0_ena.OUTPUTSELECT
reset => hr_1_ena.OUTPUTSELECT
reset => counter_sec_0.OUTPUTSELECT
reset => counter_sec_0.OUTPUTSELECT
reset => counter_sec_0.OUTPUTSELECT
reset => counter_sec_0.OUTPUTSELECT
reset => counter_sec_1.OUTPUTSELECT
reset => counter_sec_1.OUTPUTSELECT
reset => counter_sec_1.OUTPUTSELECT
reset => counter_min_0.OUTPUTSELECT
reset => counter_min_0.OUTPUTSELECT
reset => counter_min_0.OUTPUTSELECT
reset => counter_min_0.OUTPUTSELECT
reset => counter_min_1.OUTPUTSELECT
reset => counter_min_1.OUTPUTSELECT
reset => counter_min_1.OUTPUTSELECT
reset => counter_hr_0.OUTPUTSELECT
reset => counter_hr_0.OUTPUTSELECT
reset => counter_hr_0.OUTPUTSELECT
reset => counter_hr_0.OUTPUTSELECT
reset => counter_hr_1.OUTPUTSELECT
reset => counter_hr_1.OUTPUTSELECT
reset => evening_ena.OUTPUTSELECT
reset => index.OUTPUTSELECT
reset => index.OUTPUTSELECT
reset => blink.OUTPUTSELECT
reset => accept.OUTPUTSELECT
reset => accept_confirm.OUTPUTSELECT
reset => reset_LED~reg0.ENA
segment0[0] << Mux6.DB_MAX_OUTPUT_PORT_TYPE
segment0[1] << Mux5.DB_MAX_OUTPUT_PORT_TYPE
segment0[2] << Mux4.DB_MAX_OUTPUT_PORT_TYPE
segment0[3] << Mux3.DB_MAX_OUTPUT_PORT_TYPE
segment0[4] << Mux2.DB_MAX_OUTPUT_PORT_TYPE
segment0[5] << Mux1.DB_MAX_OUTPUT_PORT_TYPE
segment0[6] << Mux0.DB_MAX_OUTPUT_PORT_TYPE
segment1[0] << Mux13.DB_MAX_OUTPUT_PORT_TYPE
segment1[1] << Mux12.DB_MAX_OUTPUT_PORT_TYPE
segment1[2] << Mux11.DB_MAX_OUTPUT_PORT_TYPE
segment1[3] << Mux10.DB_MAX_OUTPUT_PORT_TYPE
segment1[4] << Mux9.DB_MAX_OUTPUT_PORT_TYPE
segment1[5] << Mux8.DB_MAX_OUTPUT_PORT_TYPE
segment1[6] << Mux7.DB_MAX_OUTPUT_PORT_TYPE
segment2[0] << Mux20.DB_MAX_OUTPUT_PORT_TYPE
segment2[1] << Mux19.DB_MAX_OUTPUT_PORT_TYPE
segment2[2] << Mux18.DB_MAX_OUTPUT_PORT_TYPE
segment2[3] << Mux17.DB_MAX_OUTPUT_PORT_TYPE
segment2[4] << Mux16.DB_MAX_OUTPUT_PORT_TYPE
segment2[5] << Mux15.DB_MAX_OUTPUT_PORT_TYPE
segment2[6] << Mux14.DB_MAX_OUTPUT_PORT_TYPE
segment3[0] << counter_hr_1[0].DB_MAX_OUTPUT_PORT_TYPE
segment3[1] << Mux23.DB_MAX_OUTPUT_PORT_TYPE
segment3[2] << counter_hr_1[1].DB_MAX_OUTPUT_PORT_TYPE
segment3[3] << counter_hr_1[0].DB_MAX_OUTPUT_PORT_TYPE
segment3[4] << counter_hr_1[0].DB_MAX_OUTPUT_PORT_TYPE
segment3[5] << Mux22.DB_MAX_OUTPUT_PORT_TYPE
segment3[6] << Mux21.DB_MAX_OUTPUT_PORT_TYPE
dec_point << dec_point~reg0.DB_MAX_OUTPUT_PORT_TYPE
set_switch => dec_point.OUTPUTSELECT
set_switch => state.set_time.DATAIN
set_switch => state.show_clock.DATAIN
counter_up => accept.OUTPUTSELECT
counter_up => State_Machine.IN1
confirm => accept_confirm.OUTPUTSELECT
confirm => State_Machine.IN1
set_LED << set_LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
show_LED << show_LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_LED << reset_LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
index_0_LED << index_0_LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
index_1_LED << index_1_LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
index_2_LED << index_2_LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
index_3_LED << index_3_LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
sec_0_LED << sec_0_LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
red[0] << VGA_SYNC:MyComponent_1.r[0]
red[1] << VGA_SYNC:MyComponent_1.r[1]
red[2] << VGA_SYNC:MyComponent_1.r[2]
red[3] << VGA_SYNC:MyComponent_1.r[3]
green[0] << VGA_SYNC:MyComponent_1.g[0]
green[1] << VGA_SYNC:MyComponent_1.g[1]
green[2] << VGA_SYNC:MyComponent_1.g[2]
green[3] << VGA_SYNC:MyComponent_1.g[3]
blue[0] << VGA_SYNC:MyComponent_1.b[0]
blue[1] << VGA_SYNC:MyComponent_1.b[1]
blue[2] << VGA_SYNC:MyComponent_1.b[2]
blue[3] << VGA_SYNC:MyComponent_1.b[3]
hsync_out << hsync_out.DB_MAX_OUTPUT_PORT_TYPE
vsync_out << comb.DB_MAX_OUTPUT_PORT_TYPE


|Semesterarbeit_FPGA_VHDL|VGA_SYNC:MyComponent_1
vga_clk => vsync~reg0.CLK
vga_clk => hsync~reg0.CLK
vga_clk => vpos[0].CLK
vga_clk => vpos[1].CLK
vga_clk => vpos[2].CLK
vga_clk => vpos[3].CLK
vga_clk => vpos[4].CLK
vga_clk => vpos[5].CLK
vga_clk => vpos[6].CLK
vga_clk => vpos[7].CLK
vga_clk => vpos[8].CLK
vga_clk => vpos[9].CLK
vga_clk => vpos[10].CLK
vga_clk => hpos[0].CLK
vga_clk => hpos[1].CLK
vga_clk => hpos[2].CLK
vga_clk => hpos[3].CLK
vga_clk => hpos[4].CLK
vga_clk => hpos[5].CLK
vga_clk => hpos[6].CLK
vga_clk => hpos[7].CLK
vga_clk => hpos[8].CLK
vga_clk => hpos[9].CLK
vga_clk => hpos[10].CLK
vga_clk => b[0]~reg0.CLK
vga_clk => b[1]~reg0.CLK
vga_clk => b[2]~reg0.CLK
vga_clk => b[3]~reg0.CLK
vga_clk => g[0]~reg0.CLK
vga_clk => g[1]~reg0.CLK
vga_clk => g[2]~reg0.CLK
vga_clk => g[3]~reg0.CLK
vga_clk => r[0]~reg0.CLK
vga_clk => r[1]~reg0.CLK
vga_clk => r[2]~reg0.CLK
vga_clk => r[3]~reg0.CLK
hsync <= hsync~reg0.DB_MAX_OUTPUT_PORT_TYPE
vsync <= vsync~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[0] <= r[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[1] <= r[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[2] <= r[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r[3] <= r[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[0] <= g[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[1] <= g[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[2] <= g[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g[3] <= g[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[0] <= b[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[1] <= b[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[2] <= b[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
b[3] <= b[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Semesterarbeit_FPGA_VHDL|pll:MyComponent_2
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|Semesterarbeit_FPGA_VHDL|pll:MyComponent_2|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Semesterarbeit_FPGA_VHDL|pll:MyComponent_2|altpll:altpll_component|pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


